{"mappings":"AAAA,SAAAA,uBAAAC,G,q3FAAA,IAAMC,KAAO,CACXC,OAAQ,CAAEC,IAAK,EAAGC,IAAK,IAAKC,MAAO,IAAKC,UAAW,EAAGC,MAAO,GAC7DC,WAAY,CACVL,IAAK,mBACLC,IAAK,mBACLC,MAAO,qBACPC,UAAW,yBACXC,MAAO,uBAGXE,OAKI,W,sBALEA,I,gDACJC,IAAA,S,MAAA,SAAOC,GACLC,KAAKC,QAAQC,UAAYH,M,EAGzB,GAAJI,QAyCI,SAzCJN,G,2DAAMM,EACQC,EAAUb,EAAKC,EAAKC,EAAOC,EAAWC,G,sCAChDU,EAAAC,EAAAC,KAAAP,OACQI,SAAWA,EAChBC,EAAKJ,QAAUO,SAASC,cAAcJ,EAAKD,UAC3CC,EAAKd,IACJmB,SAASL,EAAKJ,QAAQU,aAAatB,KAAKO,WAAWL,OACnDF,KAAKC,OAAOC,IACbc,EAAKb,IACJkB,SAASL,EAAKJ,QAAQU,aAAatB,KAAKO,WAAWJ,OACnDH,KAAKC,OAAOE,IACba,EAAKZ,MACJiB,SAASL,EAAKJ,QAAQU,aAAatB,KAAKO,WAAWH,SACnDJ,KAAKC,OAAOG,MACbY,EAAKX,UACJgB,SAASL,EAAKJ,QAAQU,aAAatB,KAAKO,WAAWF,aACnDL,KAAKC,OAAOI,UACbW,EAAKV,MACJe,SAASL,EAAKJ,QAAQU,aAAatB,KAAKO,WAAWD,SACnDN,KAAKC,OAAOK,MACbU,EAAKO,QAAUP,EAAKd,IACrBc,EAAKQ,SACLR,EAAKS,a,sDAEThB,IAAA,M,MAAA,WACEiB,aAAaf,KAAKa,Y,CAEpBf,IAAA,Q,MAAA,WACEE,KAAKY,QAAUZ,KAAKR,KACfQ,KAAMY,SAAWZ,KAAKN,UAAYM,KAAKgB,OAAOhB,KAAKY,UACpDZ,KAAKY,QAAUZ,KAAKR,MAAQQ,KAAKgB,OAAOhB,KAAKR,KAAMQ,KAAKiB,S,CAE9DnB,IAAA,a,MAAA,W,WACEE,KAAKL,MAAQ,EACTuB,YAAW,WACTb,EAAKQ,SAAWM,YAAYd,EAAKe,MAAMC,KAAIhB,GAAQA,EAAKZ,SACvDO,KAAKL,OACPK,KAAKa,SAAWM,YAAYnB,KAAKoB,MAAMC,KAAKrB,MAAOA,KAAKP,OAC3DO,KAAKgB,OAAOhB,KAAKT,S,EAGnB,CADH+B,iBAxCqBzB,SAyChB0B,QAAU,IAAIpB,QAAQ,kBAC1BqB,SAAW,IAAIrB,QAAQ,oBACvBsB,SAAW,IAAItB,QAAQ","sources":["src/js/counter.js"],"sourcesContent":["const data = {\n  config: { min: 0, max: 100, speed: 100, increment: 1, delay: 0 },\n  attributes: {\n    min: 'data-counter-min',\n    max: 'data-counter-max',\n    speed: 'data-counter-speed',\n    increment: 'data-counter-increment',\n    delay: 'data-counter-delay',\n  },\n};\nclass Screen {\n  render(value) {\n    this.element.innerHTML = value;\n  }\n}\nclass Counter extends Screen {\n  constructor(selector, min, max, speed, increment, delay) {\n    super(),\n      (this.selector = selector),\n      (this.element = document.querySelector(this.selector)),\n      (this.min =\n        parseInt(this.element.getAttribute(data.attributes.min)) ||\n        data.config.min),\n      (this.max =\n        parseInt(this.element.getAttribute(data.attributes.max)) ||\n        data.config.max),\n      (this.speed =\n        parseInt(this.element.getAttribute(data.attributes.speed)) ||\n        data.config.speed),\n      (this.increment =\n        parseInt(this.element.getAttribute(data.attributes.increment)) ||\n        data.config.increment),\n      (this.delay =\n        parseInt(this.element.getAttribute(data.attributes.delay)) ||\n        data.config.delay),\n      (this.current = this.min),\n      this.interval,\n      this.initialize();\n  }\n  die() {\n    clearTimeout(this.interval);\n  }\n  count() {\n    this.current < this.max\n      ? ((this.current += this.increment), this.render(this.current))\n      : this.current > this.max && (this.render(this.max), this.die());\n  }\n  initialize() {\n    this.delay > 0\n      ? setTimeout(() => {\n          this.interval = setInterval(this.count.bind(this), this.speed);\n        }, this.delay)\n      : (this.interval = setInterval(this.count.bind(this), this.speed)),\n      this.render(this.min);\n  }\n}\nconst counter = new Counter('.milk__counter'),\n  counter2 = new Counter('.apples__counter'),\n  counter3 = new Counter('.ice__counter');\n"],"names":["_assertThisInitialized","self","data","config","min","max","speed","increment","delay","attributes","Screen","key","value","this","element","innerHTML","Counter","selector","_this","_super","call","document","querySelector","parseInt","getAttribute","current","interval","initialize","clearTimeout","render","die","setTimeout","setInterval","count","bind","_wrapNativeSuper","counter","counter2","counter3"],"version":3,"file":"index.954756f1.js.map"}