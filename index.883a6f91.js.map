{"mappings":"AAAA,MAAMA,EACI,CAAEC,IAAK,EAAGC,IAAK,IAAKC,MAAO,IAAKC,UAAW,EAAGC,MAAO,GADzDL,EAEQ,CACVC,IAAK,mBACLC,IAAK,mBACLC,MAAO,qBACPC,UAAW,yBACXC,MAAO,sBAQX,MAAMC,UALN,MACEC,OAAOC,GACLC,KAAKC,QAAQC,UAAYH,IA2B3BI,MACEC,aAAaJ,KAAKK,UAEpBC,QACEN,KAAKO,QAAUP,KAAKP,KACfO,KAAMO,SAAWP,KAAKL,UAAYK,KAAKF,OAAOE,KAAKO,UACpDP,KAAKO,QAAUP,KAAKP,MAAQO,KAAKF,OAAOE,KAAKP,KAAMO,KAAKG,OAE9DK,aACER,KAAKJ,MAAQ,EACTa,YAAW,KACTT,KAAKK,SAAWK,YAAYV,KAAKM,MAAMK,KAAKX,MAAOA,KAAKN,SACvDM,KAAKJ,OACPI,KAAKK,SAAWK,YAAYV,KAAKM,MAAMK,KAAKX,MAAOA,KAAKN,OAC3DM,KAAKF,OAAOE,KAAKR,KArCrBoB,YAAYC,EAAUrB,EAAKC,EAAKC,EAAOC,EAAWC,GAChDkB,QACGd,KAAKa,SAAWA,EAChBb,KAAKC,QAAUc,SAASC,cAAchB,KAAKa,UAC3Cb,KAAKR,IACJyB,SAASjB,KAAKC,QAAQiB,aAAa3B,EAAgBC,OACnDD,EAAYC,IACbQ,KAAKP,IACJwB,SAASjB,KAAKC,QAAQiB,aAAa3B,EAAgBE,OACnDF,EAAYE,IACbO,KAAKN,MACJuB,SAASjB,KAAKC,QAAQiB,aAAa3B,EAAgBG,SACnDH,EAAYG,MACbM,KAAKL,UACJsB,SAASjB,KAAKC,QAAQiB,aAAa3B,EAAgBI,aACnDJ,EAAYI,UACbK,KAAKJ,MACJqB,SAASjB,KAAKC,QAAQiB,aAAa3B,EAAgBK,SACnDL,EAAYK,MACbI,KAAKO,QAAUP,KAAKR,IACrBQ,KAAKK,SACLL,KAAKQ,cAmBK,IAAIX,EAAQ,kBACf,IAAIA,EAAQ,oBACZ,IAAIA,EAAQ","sources":["src/js/counter.js"],"sourcesContent":["const data = {\n  config: { min: 0, max: 100, speed: 100, increment: 1, delay: 0 },\n  attributes: {\n    min: 'data-counter-min',\n    max: 'data-counter-max',\n    speed: 'data-counter-speed',\n    increment: 'data-counter-increment',\n    delay: 'data-counter-delay',\n  },\n};\nclass Screen {\n  render(value) {\n    this.element.innerHTML = value;\n  }\n}\nclass Counter extends Screen {\n  constructor(selector, min, max, speed, increment, delay) {\n    super(),\n      (this.selector = selector),\n      (this.element = document.querySelector(this.selector)),\n      (this.min =\n        parseInt(this.element.getAttribute(data.attributes.min)) ||\n        data.config.min),\n      (this.max =\n        parseInt(this.element.getAttribute(data.attributes.max)) ||\n        data.config.max),\n      (this.speed =\n        parseInt(this.element.getAttribute(data.attributes.speed)) ||\n        data.config.speed),\n      (this.increment =\n        parseInt(this.element.getAttribute(data.attributes.increment)) ||\n        data.config.increment),\n      (this.delay =\n        parseInt(this.element.getAttribute(data.attributes.delay)) ||\n        data.config.delay),\n      (this.current = this.min),\n      this.interval,\n      this.initialize();\n  }\n  die() {\n    clearTimeout(this.interval);\n  }\n  count() {\n    this.current < this.max\n      ? ((this.current += this.increment), this.render(this.current))\n      : this.current > this.max && (this.render(this.max), this.die());\n  }\n  initialize() {\n    this.delay > 0\n      ? setTimeout(() => {\n          this.interval = setInterval(this.count.bind(this), this.speed);\n        }, this.delay)\n      : (this.interval = setInterval(this.count.bind(this), this.speed)),\n      this.render(this.min);\n  }\n}\nconst counter = new Counter('.milk__counter'),\n  counter2 = new Counter('.apples__counter'),\n  counter3 = new Counter('.ice__counter');\n"],"names":["$c6bc4ac2a347a568$var$data","min","max","speed","increment","delay","$c6bc4ac2a347a568$var$Counter","render","value","this","element","innerHTML","die","clearTimeout","interval","count","current","initialize","setTimeout","setInterval","bind","constructor","selector","super","document","querySelector","parseInt","getAttribute"],"version":3,"file":"index.883a6f91.js.map"}